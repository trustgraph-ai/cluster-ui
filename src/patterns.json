[
   {
      "module": {
         "services": {
            "init-pulsar": {
               "command": [
                  "sh",
                  "-c",
                  "pulsar-admin --admin-url http://pulsar:8080 tenants create tg && pulsar-admin --admin-url http://pulsar:8080 namespaces create tg/flow && pulsar-admin --admin-url http://pulsar:8080 namespaces create tg/request && pulsar-admin --admin-url http://pulsar:8080 namespaces create tg/response && pulsar-admin --admin-url http://pulsar:8080 namespaces set-retention --size -1 --time 3m tg/response"
               ],
               "depends_on": {
                  "pulsar": {
                     "condition": "service_started"
                  }
               },
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/apachepulsar/pulsar:3.3.1",
               "restart": "on-failure:100"
            },
            "pulsar": {
               "command": "bin/pulsar standalone",
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "900M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "900M"
                     }
                  }
               },
               "environment": {
                  "PULSAR_MEM": "-Xms700M -Xmx700M"
               },
               "image": "docker.io/apachepulsar/pulsar:3.3.1",
               "ports": [
                  "6650:6650",
                  "8080:8080"
               ],
               "restart": "on-failure:100",
               "volumes": [
                  "pulsar-conf:/pulsar/conf",
                  "pulsar-data:/pulsar/data"
               ]
            },
            "pulsar-manager": {
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "1.4G"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "1.4G"
                     }
                  }
               },
               "environment": {
                  "SPRING_CONFIGURATION_FILE": "/pulsar-manager/pulsar-manager/application.properties"
               },
               "image": "docker.io/apachepulsar/pulsar-manager:v0.4.0",
               "ports": [
                  "9527:9527",
                  "7750:7750"
               ],
               "restart": "on-failure:100"
            }
         },
         "volumes": {
            "pulsar-conf": { },
            "pulsar-data": { }
         }
      },
      "pattern": {
         "args": [
            {
               "description": "An example argument",
               "name": "example",
               "required": false,
               "type": "string",
               "width": 20
            }
         ],
         "description": "Adds Pulsar support",
         "features": [
            "pulsar"
         ],
         "name": "pulsar",
         "requires": [ ],
         "title": "Pub/sub foundation support"
      }
   },
   {
      "module": {
         "services": {
            "chunker": {
               "command": [
                  "${CHUNKER:-chunker-token}",
                  "-p",
                  "pulsar://pulsar:6650",
                  "--chunk-size",
                  "250",
                  "--chunk-overlap",
                  "15"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "embeddings": {
               "command": [
                  "embeddings-hf",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-m",
                  "all-MiniLM-L6-v2"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "256M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "256M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "graph-rag": {
               "command": [
                  "graph-rag",
                  "-p",
                  "pulsar://pulsar:6650",
                  "--prompt-request-queue",
                  "non-persistent://tg/request/prompt-rag",
                  "--prompt-response-queue",
                  "non-persistent://tg/response/prompt-rag-response",
                  "--entity-limit",
                  "50",
                  "--triple-limit",
                  "30",
                  "--max-subgraph-size",
                  "3000"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "kg-extract-definitions": {
               "command": [
                  "kg-extract-definitions",
                  "-p",
                  "pulsar://pulsar:6650"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "kg-extract-relationships": {
               "command": [
                  "kg-extract-relationships",
                  "-p",
                  "pulsar://pulsar:6650"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "pdf-decoder": {
               "command": [
                  "pdf-decoder",
                  "-p",
                  "pulsar://pulsar:6650"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "vectorize": {
               "command": [
                  "embeddings-vectorize",
                  "-p",
                  "pulsar://pulsar:6650"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "512M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "512M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            }
         }
      },
      "pattern": {
         "args": [
            {
               "description": "An example argument",
               "name": "example",
               "required": false,
               "type": "string",
               "width": 20
            }
         ],
         "description": "Adds core Trustgraph flows",
         "features": [
            "trustgraph"
         ],
         "name": "trustgraph-base",
         "requires": [
            "pulsar"
         ],
         "title": "Core Trustgraph processing flows"
      }
   },
   {
      "module": {
         "services": {
            "cassandra": {
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "800M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "800M"
                     }
                  }
               },
               "environment": {
                  "JVM_OPTS": "-Xms256M -Xmx256M"
               },
               "image": "docker.io/cassandra:4.1.6",
               "ports": [
                  "9042:9042"
               ],
               "restart": "on-failure:100",
               "volumes": [
                  "cassandra:/var/lib/cassandra"
               ]
            },
            "query-triples": {
               "command": [
                  "triples-query-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "512M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "512M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "store-triples": {
               "command": [
                  "triples-write-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            }
         },
         "volumes": {
            "cassandra": { }
         }
      },
      "pattern": {
         "args": [
            {
               "description": "An example argument",
               "name": "example",
               "required": false,
               "type": "string",
               "width": 20
            }
         ],
         "description": "Adds Cassandra and Graph RAG components",
         "features": [
            "cassandra"
         ],
         "name": "graph-rag-cassandra",
         "requires": [
            "pulsar",
            "trustgraph"
         ],
         "title": "GraphRAG using Cassandra"
      }
   },
   {
      "module": {
         "services": {
            "cassandra": {
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "800M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "800M"
                     }
                  }
               },
               "environment": {
                  "JVM_OPTS": "-Xms256M -Xmx256M"
               },
               "image": "docker.io/cassandra:4.1.6",
               "ports": [
                  "9042:9042"
               ],
               "restart": "on-failure:100",
               "volumes": [
                  "cassandra:/var/lib/cassandra"
               ]
            },
            "query-triples": {
               "command": [
                  "triples-query-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "512M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "512M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "store-triples": {
               "command": [
                  "triples-write-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            }
         },
         "volumes": {
            "cassandra": { }
         }
      },
      "pattern": {
         "args": [
            {
               "default": "Study the following set of knowledge statements. The statements are written in Cypher format that has been extracted from a knowledge graph. Use only the provided set of knowledge statements in your response. Do not speculate if the answer is not found in the provided set of knowledge statements.\n\nHere's the knowledge statements:\n{graph}\n\nUse only the provided knowledge statements to respond to the following:\n{query}\n",
               "description": "Knowledge graph extraction prompt",
               "name": "prompt",
               "required": true,
               "type": "string",
               "width": 2000
            }
         ],
         "description": "Prompt for definition extraction",
         "features": [
            "kg-query-prompt"
         ],
         "name": "kq-query-prompt",
         "requires": [
            "pulsar",
            "trustgraph"
         ],
         "title": "Specify knowledge query prompt"
      }
   },
   {
      "module": {
         "services": {
            "cassandra": {
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "800M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "800M"
                     }
                  }
               },
               "environment": {
                  "JVM_OPTS": "-Xms256M -Xmx256M"
               },
               "image": "docker.io/cassandra:4.1.6",
               "ports": [
                  "9042:9042"
               ],
               "restart": "on-failure:100",
               "volumes": [
                  "cassandra:/var/lib/cassandra"
               ]
            },
            "query-triples": {
               "command": [
                  "triples-query-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "512M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "512M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "store-triples": {
               "command": [
                  "triples-write-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            }
         },
         "volumes": {
            "cassandra": { }
         }
      },
      "pattern": {
         "args": [
            {
               "default": "<instructions>\nStudy the following text and derive definitions for any discovered entities.\nDo not provide definitions for entities whose definitions are incomplete\nor unknown.\nOutput relationships in JSON format as an arary of objects with fields:\n- entity: the name of the entity\n- definition: English text which defines the entity\n</instructions>\n\n<text>\n{text}\n</text>\n\n<requirements>\nYou will respond only with raw JSON format data. Do not provide\nexplanations. Do not use special characters in the abstract text. The\nabstract will be written as plain text.  Do not add markdown formatting\nor headers or prefixes.  Do not include null or unknown definitions.\n</requirements>",
               "description": "Definition extraction prompt",
               "name": "prompt",
               "required": true,
               "type": "string",
               "width": 2000
            }
         ],
         "description": "Prompt for definition extraction",
         "features": [
            "extract-definition-prompt"
         ],
         "name": "extraction-definition-prompt",
         "requires": [
            "pulsar",
            "trustgraph"
         ],
         "title": "Specify definition extraction prompt"
      }
   },
   {
      "module": {
         "services": {
            "cassandra": {
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "800M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "800M"
                     }
                  }
               },
               "environment": {
                  "JVM_OPTS": "-Xms256M -Xmx256M"
               },
               "image": "docker.io/cassandra:4.1.6",
               "ports": [
                  "9042:9042"
               ],
               "restart": "on-failure:100",
               "volumes": [
                  "cassandra:/var/lib/cassandra"
               ]
            },
            "query-triples": {
               "command": [
                  "triples-query-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "512M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "512M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "store-triples": {
               "command": [
                  "triples-write-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            }
         },
         "volumes": {
            "cassandra": { }
         }
      },
      "pattern": {
         "args": [
            {
               "default": "<instructions>\nStudy the following text and derive entity relationships.  For each\nrelationship, derive the subject, predicate and object of the relationship.\nOutput relationships in JSON format as an arary of objects with fields:\n- subject: the subject of the relationship\n- predicate: the predicate\n- object: the object of the relationship\n- object-entity: false if the object is a simple data type: name, value or date.  true if it is an entity.\n</instructions>\n\n<text>\n{text}\n</text>\n\n<requirements>\nYou will respond only with raw JSON format data. Do not provide\nexplanations. Do not use special characters in the abstract text. The\nabstract must be written as plain text.  Do not add markdown formatting\nor headers or prefixes.\n</requirements>",
               "description": "Relationship extraction prompt",
               "name": "prompt",
               "required": true,
               "type": "string",
               "width": 2000
            }
         ],
         "description": "Prompt for relationship extraction",
         "features": [
            "extract-relationship-prompt"
         ],
         "name": "extraction-relationship-prompt",
         "requires": [
            "pulsar",
            "trustgraph"
         ],
         "title": "Specify relationship extraction prompt"
      }
   },
   {
      "module": {
         "services": {
            "cassandra": {
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "1.0",
                        "memory": "800M"
                     },
                     "reservations": {
                        "cpus": "0.5",
                        "memory": "800M"
                     }
                  }
               },
               "environment": {
                  "JVM_OPTS": "-Xms256M -Xmx256M"
               },
               "image": "docker.io/cassandra:4.1.6",
               "ports": [
                  "9042:9042"
               ],
               "restart": "on-failure:100",
               "volumes": [
                  "cassandra:/var/lib/cassandra"
               ]
            },
            "query-triples": {
               "command": [
                  "triples-query-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "512M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "512M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            },
            "store-triples": {
               "command": [
                  "triples-write-cassandra",
                  "-p",
                  "pulsar://pulsar:6650",
                  "-g",
                  "cassandra"
               ],
               "deploy": {
                  "resources": {
                     "limits": {
                        "cpus": "0.5",
                        "memory": "128M"
                     },
                     "reservations": {
                        "cpus": "0.1",
                        "memory": "128M"
                     }
                  }
               },
               "image": "docker.io/trustgraph/trustgraph-flow:0.8.0",
               "restart": "on-failure:100"
            }
         },
         "volumes": {
            "cassandra": { }
         }
      },
      "pattern": {
         "args": [
            {
               "default": 2000,
               "description": "Chunk size value",
               "name": "chunk-size",
               "required": true,
               "type": "int"
            },
            {
               "default": 100,
               "description": "Overlap size value",
               "name": "chunk-overlap",
               "required": true,
               "type": "int"
            }
         ],
         "description": "Configuration values for recursive chunker",
         "features": [ ],
         "name": "override-recursive-chunker",
         "requires": [
            "pulsar",
            "trustgraph"
         ],
         "title": "Recursive chunker configuration override"
      }
   }
]
